{"version":3,"sources":["NavBar.js","components/pirates/Pirate.js","components/pirates/PirateList.js","components/pirates/PirateDetail.js","helpers/request.js","components/pirates/PirateForm.js","containers/PirateContainer.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","src","alt","className","href","Pirate","_ref","pirate","url","id","react","Link","to","firstName","lastName","age","ship","name","PirateList","pirates","length","map","index","key","pirates_Pirate","PirateDetail","raids","onDelete","onUpdate","piratesRaids","raid","location","onClick","raidIndex","splice","editUrl","raidOptions","some","pirateRaid","pirateHasRaid","value","onSubmit","event","preventDefault","parseInt","target","push","type","Request","Object","classCallCheck","this","base","fetch","then","res","json","method","headers","Content-Type","payload","body","JSON","stringify","PirateForm","_this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleShip","handleSubmit","findShipIndex","setState","objectSpread","_this2","ships","findIndex","propertyName","selectedShip","console","log","onCreate","shipOptions","heading","placeholder","onChange","defaultValue","disabled","Component","PirateContainer","findPirateById","request","piratePromise","get","shipPromise","raidPromise","Promise","all","data","find","delete","window","post","patch","_this3","BrowserRouter","Switch","Route","exact","path","render","pirates_PirateForm","handlePost","match","params","handleUpdate","pirates_PirateDetail","handleDelete","pirates_PirateList","MainContainer","src_NavBar","component","App","containers_MainContainer","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f039317.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = (props) => {\n  return (\n    <header>\n      <img src=\"/images/pirtate-flag.jpg\" alt=\"Logo\"/>\n\n      <ul>\n        <li className=\"navLink\">\n          <a href=\"/pirates\">Pirates</a>\n        </li>\n        <li className=\"navLink\">\n          <a href=\"/pirates/new\">Create pirate</a>\n        </li>\n        <li className=\"navLink\">\n          <a href=\"/ships\">Ships</a>\n        </li>\n        <li className=\"navLink\">\n          <a href=\"/raids\" >Raids</a>\n        </li>\n\n      </ul>\n    </header>\n  )\n}\n\nexport default NavBar;\n","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Pirate = ({pirate}) => {\n\n  if (!pirate){\n    return \"Loading...\"\n  }\n\n  const url = \"/pirates/\" + pirate.id;\n\n  return (\n    <Fragment>\n    <Link to = {url} className=\"name\">\n    {pirate.firstName} {pirate.lastName}\n    </Link>\n    <p>Age: {pirate.age}</p>\n    <p>Ship: {pirate.ship.name}</p>\n    </Fragment>\n  )\n}\n\nexport default Pirate;\n","import React from 'react';\nimport Pirate from './Pirate.js';\n\n\nconst PirateList = (props) => {\n\n\tif (props.pirates.length === 0){\n\t  return (<p>Loading...</p>)\n\t}\n\n\tconst pirates = props.pirates.map((pirate, index) => {\n\t  return (\n\t    <li key={index} className=\"component-item\">\n\t    <div className=\"component\">\n\t    <Pirate pirate={pirate} />\n\t    </div>\n\t    </li>\n\t  )\n\t})\n\n\treturn (\n\t  <ul className=\"component-list\">\n\t    {pirates}\n\t  </ul>\n\t)\n}\n export default PirateList;\n","import React, {Component}  from 'react';\nimport Pirate from \"./Pirate\";\nimport {Link} from 'react-router-dom';\n\nconst PirateDetail = ({pirate, raids, onDelete, onUpdate}) => {\n\n\n  const handleDelete = () => {\n    onDelete(pirate.id)\n  }\n\n  const deleteRaid = (raidIndex) => {\n    pirate.raids.splice(raidIndex, 1)\n    onUpdate(pirate)\n  }\n\n  const pirateHasRaid = (raid) =>{\n    return pirate.raids.some((pirateRaid) => {\n      return raid.id === pirateRaid.id\n    })\n  }\n\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      const index = parseInt(event.target.raids.value)\n      const raid = raids[index];\n      pirate.raids.push(raid)\n      onUpdate(pirate);\n    }\n\n    if (!pirate){\n      return \"Loading...\"\n    }\n\n    const piratesRaids = pirate.raids.map((raid, index) => {\n      return <li key={index}>\n      {raid.location} <button onClick={() => deleteRaid(index)}>Delete</button>\n      </li>\n    })\n\n    const editUrl = \"/pirates/\" + pirate.id + \"/edit\"\n\n    const raidOptions = raids.map((raid, index) => {\n      if (!pirateHasRaid(raid)){\n        return (\n          <option key={index} value={index}>{raid.location}</option>\n        )\n      } else {\n        return null\n      }\n    })\n\n    return (\n      <div className = \"component\">\n      <Pirate pirate = {pirate}/>\n      <p>Raids:</p>\n      <ul>\n      {piratesRaids}\n      </ul>\n      <form onSubmit={handleSubmit}>\n      <select name=\"raids\" >\n      {raidOptions}\n      </select>\n      <input type=\"submit\" value=\"Add Raid\"/>\n      </form>\n      <button onClick={handleDelete}>Delete {pirate.firstName}</button>\n      <Link to= {editUrl}><button type=\"button\">Edit {pirate.firstName}</button></Link>\n      </div>\n    )\n  }\n\nexport default PirateDetail;\n","class Request {\n\n  constructor(){\n    this.base = \"https://jens-pirates.herokuapp.com\"\n  }\n\n    get(url) {\n      return fetch(this.base + url)\n      .then((res) => res.json());\n    }\n\n    delete(url) {\n      return fetch(this.base + url, {\n        method: \"DELETE\",\n        headers: {'Content-Type': 'application/json'}\n      })\n    }\n\n    post(url, payload){\n      return fetch(this.base + url, {\n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n      })\n    }\n    \n    patch(url, payload){\n      return fetch(this.base + url, {\n        method: \"PATCH\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(payload)\n      })\n    }\n\n}\n\nexport default Request;\n","import React, {Component} from 'react';\n\nclass PirateForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pirate: {\n        firstName: \"\",\n        lastName: \"\",\n        age: 0,\n        ship: null\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleShip = this.handleShip.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.findShipIndex = this.findShipIndex.bind(this);\n  }\n\n  componentDidMount(){\n    if(this.props.pirate){\n      this.setState({pirate: {... this.props.pirate}})\n    }\n  }\n\n  findShipIndex(){\n    if(this.props.pirate){\n      return this.props.ships.findIndex(ship => this.props.pirate.ship.id === ship.id)\n    } else {\n      return null;\n    }\n  }\n\n  handleChange(event){\n    let propertyName = event.target.name;\n    let pirate = this.state.pirate\n    pirate[propertyName] = event.target.value;\n    this.setState({pirate: pirate})\n  }\n\n  handleShip(event){\n    const index = parseInt(event.target.value)\n    const selectedShip = this.props.ships[index]\n    let pirate = this.state.pirate;\n    pirate['ship'] = selectedShip\n    this.setState({pirate: pirate})\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    if(this.state.pirate.id){;\n      this.props.onUpdate(this.state.pirate)\n    } else {\n      console.log(\"Called\");\n      this.props.onCreate(this.state.pirate);\n    }\n  }\n\n  render(){\n\n    if(this.props.ships.length === 0 ){\n      return <p>Loading...</p>\n    }\n\n    const shipOptions = this.props.ships.map((ship, index) => {\n      return <option key={ship.id} value={index}>{ship.name}</option>\n    });\n\n    let heading = \"\"; // ADDED\n\n    if (!this.props.pirate){\n      heading = \"Create Pirate\"\n    } else {\n      heading = \"Edit \" + this.props.pirate.firstName;\n    }\n\n    return (\n      <div>\n      <h3>{heading}</h3>\n      <form onSubmit={this.handleSubmit}>\n      <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" onChange={this.handleChange} value={this.state.pirate.firstName} />\n      <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" onChange={this.handleChange} value={this.state.pirate.lastName} />\n      <input type=\"number\" placeholder=\"Age\" name=\"age\" onChange={this.handleChange} value={this.state.pirate.age}/>\n      <select name=\"ship\" onChange={this.handleShip} defaultValue={this.findShipIndex() || 'select-ship'}>\n      <option disabled value=\"select-ship\">Select a ship</option>\n        {shipOptions}\n      </select>\n      <button type=\"submit\">Save</button>\n      </form>\n      </div>\n    )\n  }\n}\n\nexport default PirateForm;\n","import React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport PirateList from '../components/pirates/PirateList';\nimport PirateDetail from '../components/pirates/PirateDetail';\nimport Request from '../helpers/request';\nimport PirateForm from '../components/pirates/PirateForm';\n\nclass PirateContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pirates: [],\n      ships: [],\n      raids: []\n    }\n\n    this.findPirateById = this.findPirateById.bind(this);\n  }\n\n  componentDidMount(){\n    const request = new Request();\n    const piratePromise = request.get('/api/pirates')\n    const shipPromise = request.get('/api/ships')\n    const raidPromise = request.get('/api/raids')\n\n    Promise.all([piratePromise, shipPromise, raidPromise])\n    .then((data) => {\n      this.setState({\n        pirates: data[0],\n        ships: data[1],\n        raids: data[2]\n      })\n    })\n\n  }\n\n  findPirateById(id){\n    return this.state.pirates.find((pirate) => {\n      return pirate.id === parseInt(id);\n    });\n  }\n\n  handleDelete(id){\n    const request = new Request();\n    const url = \"/api/pirates/\" + id\n    request.delete(url)\n    .then(() => window.location = \"/pirates\")\n  }\n\n  handlePost(pirate){\n    const request = new Request();\n    request.post(\"/api/pirates\", pirate)\n    .then(() => window.location = '/pirates')\n  }\n\n  handleUpdate(pirate){\n    const request = new Request();\n    request.patch('/api/pirates/' + pirate.id, pirate).then(() => {\n      window.location = '/pirates/' + pirate.id\n    })\n  }\n\n\n  render(){\n\n    if(!this.state.pirates){\n      return null\n    }\n\n    return (\n      <Router>\n      <Fragment>\n      <Switch>\n\n      <Route exact path=\"/pirates/new\" render={(props) => {\n        return <PirateForm ships={this.state.ships} onCreate={this.handlePost}/>\n      }} />\n\n      <Route exact path=\"/pirates/:id/edit\" render={(props) =>{\n        const id = props.match.params.id\n        const pirate = this.findPirateById(id);\n        return <PirateForm pirate={pirate}\n        ships={this.state.ships} raids={this.state.raids} onUpdate={this.handleUpdate}/>\n      }}/>\n\n      <Route exact path=\"/pirates/:id\" render={(props) =>{\n        const id = props.match.params.id;\n        const pirate = this.findPirateById(id);\n        return <PirateDetail pirate={pirate}\n        onDelete={this.handleDelete}\n        onUpdate={this.handleUpdate}\n        raids={this.state.raids}/>\n      }}/>\n\n      <Route render={(props) => {\n        return <PirateList pirates={this.state.pirates}/>\n      }} />\n\n      </Switch>\n      </Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default PirateContainer;\n","import React, {Fragment} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NavBar from '../NavBar.js';\nimport PirateContainer from './PirateContainer';\n\nconst MainContainer = () => {\n\n    return (\n      <Router>\n      <Fragment>\n      <NavBar/>\n      <Switch>\n        <Route path=\"/pirates\" component={PirateContainer} />\n      </Switch>\n\n\n      </Fragment>\n      </Router>\n    )\n}\n\nexport default MainContainer;\n","import React, { Component } from 'react';\n\n\nimport MainContainer from './containers/MainContainer'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n      <MainContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}